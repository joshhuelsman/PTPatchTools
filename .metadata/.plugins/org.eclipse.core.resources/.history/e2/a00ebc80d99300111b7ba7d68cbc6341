import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;


public class Main {
	public static void main(String[] args){
		if(args[0].equals("-cl")){//combine legacy
			int num_patchs = (args.length - 1);
			
		}
	}
	
	
	public static byte[] combine_legacy(int num, String[] patches){
		byte[][] patch_array = new byte[num][];
		int final_size = 0;
		int header = (6 +(num * 4));
		for(int i = 0; i < num; i++){
			try {
				patch_array[i] = readPatch(i, patches);
				final_size += patch_array[i].length;
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		
		final_size += header;
		byte[] final_array = new byte[final_size];
		
		
		
		return null;
	}
	
	public static void writeMagic(OutputStream os) throws IOException{
		byte[] magic =  {(byte) 0xFF, 0x54, 0x50,0x54 };
		os.write(magic);
	}
	
	public static void writeVersionCode(int vc, OutputStream os) throws IOException{
		os.write(vc);
	}
	
	public static byte[] readPatch(int index, String[] patches) throws IOException{
		File patch = new File(patches[index]);
		byte[] ret = new byte[(int) patch.length()];
		InputStream is = new FileInputStream(patches[index]);
		is.read(ret, 0, ret.length);
		is.close();
		return ret;
	}
}
